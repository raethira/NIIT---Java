			Array
defn.:
	Continous memory allocation
	It contain same data types
Advantages:
	Access speed incraese
Types:
	1. Memory base:
	a. Static array	- Desing time - eg. int a[5];  - memory waste
	b. Dynamic Array	- Run time	      Eg. Using new operator
	2. Based on index value
	a. One Dim. array	- USing single index value	- Ordinary programs	
	b. Two dim array- Using double index value- Table /Matrix handle
	c. Mult dim. array	- Using multiple index value - Vector handle
Declare:
	one
	1. Syntax		- Datatype array_name[indexValue1];
	two
	1. Syntax		- Datatype array_name[indexValue1][indexvalue2];
	multi
	1. Syntax	- Datatype array_name[indexValue1]...[indexvalue_n];
Example:
	one		int a[5];
	two		int a[2][2];
	multi		int a[2][2][2];
Value initlize:
	1. Declare time
	 Syntax	- Datatype array_name[indexValue1] = { values };
	 Syntax	- Datatype array_name[indexValue1][indexvalue2] = {Values};
	 Syntax- Datatype array_name[indexValue1]...[indexvalue_n] ={values};
	2. Example 
		int a[5] = { 10,20,30};
		int a[] = { 10,20,30};	- valid/invalid
		int a[2] = { 10,20,30,40,50,60}; - valid/invalid

		int a[2][2] = { { 10,20},{30,40}};
		int a[][]    = { { 10,20},{30,40}};	valid/invalid
		int a[][2]  = { { 10,20},{30,40}};    valid/invalid
		int a[2][] = { { 10,20},{30,40}};	valid/invalid
Access:
	One dim. array	: Using single for loop
	two dim. array	: using double for loop
	multi.dim. array	: using multi  for loop

Eg. prog for one dim. array 
#include <iostream.h>
#include <conio.h>
void main()
{
	int a[5],i,n;
	cout <<"Enter n value";
	cin >> n;
	cout <<"Enter the elements ";
	for (i = 0; i<n; i++)
	{
		cin >> a[i];	
	}
	cout <<"Given elements  are";
	for (i = 0; i<n; i++)
	{
		cout<< a[i] <<endl;	
	}
	getch();
}

/* Eg. prog for sorted elements */
#include <iostream.h>
#include <conio.h>
void main()
{
	int a[5],i,n;
	cout <<"Enter n value";
	cin >> n;
	cout <<"Enter the elements ";
	for (i = 0; i<n; i++)
	{
		cin >> a[i];	
	}
	cout <<"Sorted elements  are";
	for (i = 0; i<n; i++)
	{
		for (int j = i+1; j<n; j++)
		{	
			if (a [i]  > a[j]
			{
				int temp = a[i];
				a[i] = a[j];
				a[j] = temp;
			}
		}
	}
	for (i = 0; i<n; i++)
	{
		cout<< a[i] <<endl;	
	}
	getch();


/* Eg. prg for two dim. array */
#include <iostream.h>
#include <conio.h>
void main()
{
	int a[5][5],i,j,r,c;
	cout <<"Enter r and c value";
	cin >> r>>c;
	cout <<"Enter the elements ";
	for (i = 0; i<r; i++)
	{
		for (j=0; j<c; j++)
		{
			cin >> a[i][j];	
		}
	}
	cout <<"Elements of Matrix A";
	for (i = 0; i<n; i++)
	{
		for (j = 0; j<n; j++)
		{	
			cout<< a[i][j] <<"\t";	
		}
		cout <<"\n";
	}
	getch();
}

